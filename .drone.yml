kind: pipeline
type: docker
name: default


steps:
  - name: auto-tag
    image: alpine/git
    when:
      event:
        - push
        - pull_request
    environment:
      GIT_AUTHOR_NAME: drone-ci
      GIT_AUTHOR_EMAIL: drone@example.com
      GIT_TOKEN:
        from_secret: GIT_TOKEN
    commands:
      - |
        git config --global user.name "$GIT_AUTHOR_NAME"
        git config --global user.email "$GIT_AUTHOR_EMAIL"
        git remote set-url origin https://$GIT_TOKEN@github.com/jeremycho-eq4all/cicd.git

        # 커밋 메시지에 [release] 포함 여부
        if ! git log -1 --pretty=%B | grep -q '\[release\]'; then
          echo "🔕 [release] 태그 없음 — 태그 생략"
          exit 0
        fi

        VERSION=$(cat .version)
        MAJOR=$(echo "$VERSION" | cut -d. -f1)
        MINOR=$(echo "$VERSION" | cut -d. -f2)

        git fetch --tags origin

        REGEX=$(printf "^v%s\\.%s\\.[0-9]+$" "$MAJOR" "$MINOR")
        LAST_TAG=$(git tag | grep -E "$REGEX" | sort -V | tail -n1)

        BUILD=0
        if [ -n "$LAST_TAG" ]; then
          BUILD=$(echo "$LAST_TAG" | awk -F. '{print $3}')
          BUILD=$((BUILD + 1))
        fi

        NEW_TAG=$(printf "v%s.%s.%s" "$MAJOR" "$MINOR" "$BUILD")
        echo "🔖 생성할 태그: $NEW_TAG"

        if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
          echo "⚠️ 태그 $NEW_TAG 이미 존재. 스킵합니다."
          exit 0
        fi

        git tag "$NEW_TAG"
        git push origin "$NEW_TAG"
